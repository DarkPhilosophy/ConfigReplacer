<Window x:Class="ConfigReplacer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ConfigReplacer"
        mc:Ignorable="d"
        Title="{DynamicResource AppTitle}" Width="850" SizeToContent="Height"
        WindowStartupLocation="Manual"
        ResizeMode="CanMinimize"
        Icon="/app.ico">

    <Window.Resources>
        <!-- Animation Definitions -->
        <Storyboard x:Key="HoverAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             To="1.05" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             To="1.05" Duration="0:0:0.1" />
        </Storyboard>

        <Storyboard x:Key="UnhoverAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             To="1.0" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             To="1.0" Duration="0:0:0.1" />
        </Storyboard>

        <Storyboard x:Key="ClickAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             To="0.95" Duration="0:0:0.05" />
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             To="0.95" Duration="0:0:0.05" />
        </Storyboard>

        <!-- Enhanced Pulsing Border Animation for Active Buttons -->
        <Storyboard x:Key="PulsingBorderAnimation" RepeatBehavior="Forever">
            <!-- Glow effect animation -->
            <DoubleAnimation
                Storyboard.TargetProperty="BorderThickness"
                From="2" To="6" Duration="0:0:0.6"
                AutoReverse="True" />

            <!-- Color animation -->
            <ColorAnimation
                Storyboard.TargetProperty="BorderBrush.Color"
                From="#2196F3" To="#FFFFFF" Duration="0:0:0.6"
                AutoReverse="True" />

            <!-- Scale animation for a subtle bounce effect -->
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                From="1.0" To="1.03" Duration="0:0:0.6"
                AutoReverse="True" />
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                From="1.0" To="1.03" Duration="0:0:0.6"
                AutoReverse="True" />
        </Storyboard>

        <!-- Size Pulsing Animation for Blue Buttons -->
        <Storyboard x:Key="SizePulsingAnimation" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                From="1.0" To="1.05" Duration="0:0:0.8"
                AutoReverse="True" />
            <DoubleAnimation
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                From="1.0" To="1.05" Duration="0:0:0.8"
                AutoReverse="True" />
        </Storyboard>

        <!-- Button Style -->
        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Height" Value="60"/>
            <Setter Property="Width" Value="280"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Fixed size container to ensure consistent button size -->
                        <Grid Width="280" Height="60">
                            <Border x:Name="ButtonBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    BorderThickness="0"
                                    BorderBrush="White"
                                    Width="280"
                                    Height="60">
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource UnhoverAnimation}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard Storyboard="{StaticResource ClickAnimation}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                <BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <!-- Red button behavior is handled in code-behind -->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- We'll handle red button behavior in code-behind -->
    </Window.Resources>

    <Grid>
        <!-- Main Content -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>  <!-- Header -->
                <RowDefinition Height="Auto"/>  <!-- Ad Banner -->
                <RowDefinition Height="Auto"/>    <!-- Main Content -->
                <RowDefinition Height="Auto"/>  <!-- Action Buttons -->
                <RowDefinition Height="*"/>  <!-- Footer/Image Ad Banner -->
            </Grid.RowDefinitions>

            <!-- Header -->
            <Border Grid.Row="0" Background="#000000" Padding="20,10,20,20">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="{DynamicResource HeaderSubtitle}"
                                FontSize="14"
                                Foreground="#E1F5FE"
                                Margin="0,5,0,0"/>
                    </StackPanel>

                    <!-- Copyright Notice -->
                    <TextBlock Grid.Column="1"
                            Text="{DynamicResource Copyright}"
                            FontSize="10"
                            Foreground="#E1F5FE"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,5"/>
                </Grid>
            </Border>

            <!-- Text Ad Banner below header -->
            <Border x:Name="adBannerContainer" Grid.Row="1" Background="Transparent" Padding="0,0" Margin="0,0" Visibility="Collapsed">
                <TextBlock x:Name="txtAdBanner"
                          FontSize="16"
                          FontWeight="SemiBold"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          Padding="0,0"
                          Margin="0,0"
                          Foreground="#333333"
                          TextWrapping="NoWrap"
                          Height="22">
                    <!-- Inlines will be added programmatically -->
                </TextBlock>
            </Border>

            <!-- Main Content -->
            <Grid Grid.Row="2" Margin="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- File Information -->
                <StackPanel x:Name="fileInfoPanel" Grid.Row="0" Margin="0,0,0,20">
                    <TextBlock Text="{DynamicResource FilesToProcess}" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,10"/>
                    <Border Background="#F5F5F5" Padding="10" CornerRadius="5">
                        <StackPanel>
                            <TextBlock Text="1. C\cpi\config\ViTrox.WS.FlexRomania.PostData\config.json"
                                    TextWrapping="Wrap" Margin="0,0,0,5"/>
                            <TextBlock Text="2. C\cpi\config\MESScriptComm\Vitrox.MES.Plugin\config.json"
                                    TextWrapping="Wrap"/>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Status and Log -->
                <Border Grid.Row="1"
                        Background="#FAFAFA"
                        BorderBrush="#E0E0E0"
                        BorderThickness="1"
                        CornerRadius="5"
                        Height="250">
                    <ScrollViewer Margin="10" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="logScrollViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="230">
                        <TextBox x:Name="txtLog"
                                IsReadOnly="True"
                                TextWrapping="Wrap"
                                BorderThickness="0"
                                Background="Transparent"
                                FontFamily="Consolas"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Text="{DynamicResource ReadyMessage}"/>
                    </ScrollViewer>
                </Border>
            </Grid>

            <!-- Action Buttons -->
            <Grid Grid.Row="3" Background="#F5F5F5" Margin="20,10,20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="btnReplaceBERtoSCH"
                            Content="{DynamicResource BERtoSCHButton}"
                            Style="{StaticResource ActionButton}"
                            Width="280"
                            Height="60"
                            Click="btnReplaceBERtoSCH_Click"/>

                    <Button x:Name="btnReplaceSCHtoBER"
                            Content="{DynamicResource SCHtoBERButton}"
                            Style="{StaticResource ActionButton}"
                            Width="280"
                            Height="60"
                            Click="btnReplaceSCHtoBER_Click"/>
                </StackPanel>

                <!-- Language Switch Button -->
                <Button x:Name="btnSwitchLanguage"
                        Grid.Column="1"
                        Content="{DynamicResource LanguageButton}"
                        Width="150"
                        Height="40"
                        Margin="10"
                        Background="#4CAF50"
                        Foreground="White"
                        BorderThickness="0"
                        HorizontalAlignment="Right"
                        Click="btnSwitchLanguage_Click">
                    <Button.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Button.RenderTransform>
                    <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard Storyboard="{StaticResource UnhoverAnimation}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseDown">
                                    <BeginStoryboard Storyboard="{StaticResource ClickAnimation}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseUp">
                                    <BeginStoryboard Storyboard="{StaticResource HoverAnimation}"/>
                                </EventTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>

            <!-- Footer -->
            <!-- Bottom Row: Ad Banner (seamlessly integrated) -->
            <Grid Grid.Row="4" Margin="0,0,0,3" VerticalAlignment="Bottom">
                <!-- Image Ad Container -->
                <Grid x:Name="adContainer"
                        Margin="0,0,0,3"
                        Height="65"
                        VerticalAlignment="Bottom"
                        Visibility="Collapsed">
                    <!-- Image ads will be added programmatically as children of this Grid -->
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
