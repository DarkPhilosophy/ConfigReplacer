name: Build ConfigReplacer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Checkout Common library
      uses: actions/checkout@v4
      with:
        repository: DarkPhilosophy/Common
        path: Common
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x
    
    - name: Install .NET Framework Developer Pack
      run: |
        choco install netfx-4.8-devpack -y
      shell: pwsh
    
    - name: List directory structure
      run: |
        dir
        dir -Recurse -Depth 2
      shell: pwsh
    
    - name: Restore NuGet packages
      run: |
        nuget restore ConfigReplacer.sln
      shell: pwsh
    
    - name: Build with MSBuild (.NET Framework 4.8)
      run: |
        msbuild ConfigReplacer.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFramework=net48
      shell: pwsh
      continue-on-error: true
    
    - name: Build with MSBuild (.NET 6.0)
      run: |
        msbuild ConfigReplacer.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFramework=net6.0-windows
      shell: pwsh
      continue-on-error: true
    
    - name: Build with MSBuild (.NET 8.0)
      run: |
        msbuild ConfigReplacer.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFramework=net8.0-windows
      shell: pwsh
      continue-on-error: true
    
    - name: Search for build outputs
      run: |
        echo "Searching for EXE and DLL files:"
        Get-ChildItem -Path . -Include *.exe,*.dll -Recurse | Where-Object { $_.FullName -notlike "*\\Common\\*" -and $_.FullName -notlike "*\\packages\\*" } | Select-Object FullName
      shell: pwsh
    
    - name: Create output directories and copy files
      run: |
        mkdir -p output/net48
        mkdir -p output/net6.0
        mkdir -p output/net8.0
        
        # Copy .NET Framework 4.8 outputs
        if (Test-Path bin/Release/net48) {
          Copy-Item -Path bin/Release/net48/* -Destination output/net48/ -Recurse -Force
          echo "Copied .NET Framework 4.8 outputs"
        }
        
        # Copy .NET 6.0 outputs
        if (Test-Path bin/Release/net6.0-windows) {
          Copy-Item -Path bin/Release/net6.0-windows/* -Destination output/net6.0/ -Recurse -Force
          echo "Copied .NET 6.0 outputs"
        }
        
        # Copy .NET 8.0 outputs
        if (Test-Path bin/Release/net8.0-windows) {
          Copy-Item -Path bin/Release/net8.0-windows/* -Destination output/net8.0/ -Recurse -Force
          echo "Copied .NET 8.0 outputs"
        }
      shell: pwsh
    
    - name: Upload .NET Framework 4.8 build
      uses: actions/upload-artifact@v4
      with:
        name: ConfigReplacer-net48
        path: output/net48/
        if-no-files-found: warn
    
    - name: Upload .NET 6.0 build
      uses: actions/upload-artifact@v4
      with:
        name: ConfigReplacer-net6.0
        path: output/net6.0/
        if-no-files-found: warn
    
    - name: Upload .NET 8.0 build
      uses: actions/upload-artifact@v4
      with:
        name: ConfigReplacer-net8.0
        path: output/net8.0/
        if-no-files-found: warn
