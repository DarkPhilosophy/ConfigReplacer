name: Build ConfigReplacer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x
    
    - name: Install .NET Framework Developer Pack
      run: |
        choco install netfx-4.8-devpack -y
      shell: pwsh
    
    - name: List directory structure
      run: |
        dir
        dir -Recurse -Depth 2
        if (Test-Path ConfigReplacer.csproj) {
          type ConfigReplacer.csproj
        }
      shell: pwsh
    
    - name: Check for solution file
      run: |
        if (Test-Path *.sln) {
          echo "Solution file found:"
          dir *.sln
        } else {
          echo "No solution file found in root directory"
        }
      shell: pwsh
    
    - name: Restore dependencies with NuGet
      run: |
        nuget restore
      continue-on-error: true
    
    - name: Restore dependencies with dotnet
      run: |
        dotnet restore
      continue-on-error: true
    
    - name: Build with MSBuild (.NET Framework)
      run: |
        msbuild /p:Configuration=Release /p:TargetFramework=net48
      continue-on-error: true
    
    - name: Build with dotnet (.NET Framework)
      run: |
        dotnet build --configuration Release --framework net48 --no-restore
        echo "Build exit code: 0"
        
        # Show build output location
        if (Test-Path bin/Release/net48) {
          echo "Build output exists at bin/Release/net48:"
          dir bin/Release/net48
        } else {
          echo "No build output found at bin/Release/net48"
        }
      shell: pwsh
      continue-on-error: true
    
    - name: Build with dotnet (.NET 6.0)
      run: |
        dotnet build --configuration Release --framework net6.0-windows --no-restore
        echo "Build exit code: 0"
        
        # Show build output location
        if (Test-Path bin/Release/net6.0-windows) {
          echo "Build output exists at bin/Release/net6.0-windows:"
          dir bin/Release/net6.0-windows
        } else {
          echo "No build output found at bin/Release/net6.0-windows"
        }
      shell: pwsh
      continue-on-error: true
    
    - name: Search for build outputs
      run: |
        echo "Searching for EXE and DLL files:"
        Get-ChildItem -Path . -Include *.exe,*.dll -Recurse | Select-Object FullName
      shell: pwsh
    
    - name: Create output directories and copy files
      run: |
        mkdir -p output
        
        # Find and copy any EXE and DLL files
         = Get-ChildItem -Path . -Include *.exe,*.dll -Recurse
        if (.Count -gt 0) {
          foreach ( in ) {
             = Join-Path "output" .Name
            Copy-Item -Path .FullName -Destination  -Force
            echo "Copied  to "
          }
        } else {
          echo "No EXE or DLL files found to copy"
        }
      shell: pwsh
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ConfigReplacer-build-outputs
        path: output/
        if-no-files-found: warn
